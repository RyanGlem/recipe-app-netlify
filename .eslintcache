[{"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\index.js":"1","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\reportWebVitals.js":"2","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\redux\\store.js":"3","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\App.js":"4","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\Nav.js":"5","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\components\\RecipeHome.jsx":"6","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\redux\\reducers\\index.js":"7","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\HomeView.jsx":"8","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\components\\SignUpPage.jsx":"9","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\RecipesView.jsx":"10","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\FavoritesView.jsx":"11","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\components\\LoginPage.jsx":"12","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\AddRecipeView.jsx":"13","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\ProfileView.jsx":"14","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\UsersView.jsx":"15"},{"size":707,"mtime":1611772502060,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1611772502077,"results":"18","hashOfConfig":"17"},{"size":483,"mtime":1611772502073,"results":"19","hashOfConfig":"17"},{"size":213,"mtime":1612013392234,"results":"20","hashOfConfig":"17"},{"size":3916,"mtime":1612122902244,"results":"21","hashOfConfig":"17"},{"size":1095,"mtime":1612029897280,"results":"22","hashOfConfig":"17"},{"size":4342,"mtime":1612122780835,"results":"23","hashOfConfig":"17"},{"size":1276,"mtime":1611956975213,"results":"24","hashOfConfig":"17"},{"size":4291,"mtime":1612012165131,"results":"25","hashOfConfig":"17"},{"size":740,"mtime":1612121526925,"results":"26","hashOfConfig":"17"},{"size":425,"mtime":1611975656877,"results":"27","hashOfConfig":"17"},{"size":2844,"mtime":1612013231388,"results":"28","hashOfConfig":"17"},{"size":2360,"mtime":1612012263250,"results":"29","hashOfConfig":"17"},{"size":1042,"mtime":1612012165135,"results":"30","hashOfConfig":"17"},{"size":314,"mtime":1611772502108,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1rdz65a",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\index.js",[],["72","73"],"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\reportWebVitals.js",[],"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\redux\\store.js",[],"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\App.js",["74"],"import {HomeView} from './components/RecipeHome'\r\nimport Nav from './Nav'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\Nav.js",["75","76","77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { Switch, Route} from \"react-router-dom\";\r\nimport { AddRecipeView } from \"./views/AddRecipeView\";\r\nimport { FavoritesView } from \"./views/FavoritesView\";\r\nimport { ProfileView } from \"./views/ProfileView\";\r\nimport { RecipesView } from './views/RecipesView';\r\nimport { HomeView } from \"./views/HomeView\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Login from './components/LoginPage'\r\nimport SignUp from './components/SignUpPage'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logoutUser } from './redux/reducers'\r\nimport { sessionCheck } from './redux/reducers'\r\n\r\nconst requireLogin = (loggedIn, redirect=\"/home\") => Comp => props => loggedIn ? <Comp {...props} /> : <Redirect to={redirect} />\r\n \r\nfunction Navigation() {\r\n  const [show, setShow] = useState(false);\r\n  const [showSignUp, setShowSignUp] = useState(false)\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleCloseSignUp = () => setShowSignUp(false);\r\n  const handleShowSignUp = () => setShowSignUp(true);\r\n\r\n  const { isLoggedIn, username } = useSelector(({ isLoggedIn, user: { username }}) => ({ isLoggedIn, username }))\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(sessionCheck())\r\n  }, [])\r\n\r\n  const authorize = requireLogin(isLoggedIn)\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/home\">Recipe.io</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/home\">Home</Nav.Link>\r\n          \r\n          {\r\n            isLoggedIn && (\r\n              <NavDropdown title={`Welcome Back, ${username}`} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item><Link to=\"/recipes\">View Recipes</Link></NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link to=\"/addrecipe\">Create Recipes</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item><Link to=\"/favorites\">Favorites</Link></NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item><Link to=\"/profile\">Profile</Link></NavDropdown.Item>\r\n                <NavDropdown.Item>Followers</NavDropdown.Item>\r\n              </NavDropdown>\r\n            )\r\n          }\r\n            \r\n          </Nav>\r\n          <Nav className=\"justify-content-end\">\r\n            {\r\n              !isLoggedIn ? (\r\n                <Nav.Item>\r\n                  <Button onClick={handleShow}> Login </Button> {' '}\r\n                  <Button onClick={handleShowSignUp}> Sign Up </Button>\r\n                  <SignUp handleClose={handleCloseSignUp} show={showSignUp}/>\r\n                  <Login handleClose={handleClose} show={show}/>\r\n                </Nav.Item>\r\n              ) : (\r\n                <Nav.Item>\r\n                  <Button onClick={() => dispatch(logoutUser())}> Logout </Button>\r\n                </Nav.Item>\r\n              )\r\n            }\r\n            \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <div></div>\r\n      <div>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/profile\" component={authorize(ProfileView)} />\r\n          <Route exact path=\"/recipes\" component={RecipesView} /> {/* TODO: render Recipe from redux store based on ID */}\r\n          <Route exact path=\"/favorites\" component={authorize(FavoritesView)} />\r\n          <Route exact path=\"/addrecipe\" component={authorize(AddRecipeView)} />\r\n          <Route exact path=\"/home\" component={HomeView} />\r\n        </Switch>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\components\\RecipeHome.jsx",["79","80","81"],"import React, { Component } from 'react';\r\nimport UsersView from '../views/UsersView'\r\nimport HomeView from '../views/HomeView'\r\nimport RecipesView from '../views/RecipesView'\r\nimport { connect } from 'react-redux'\r\nimport {getUsers, getRecipes} from '../redux/reducers'\r\nimport {ProgressBar} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport \"./ComponentCSS/Home.css\";\r\n\r\nclass HomeDisplay extends Component {\r\n\r\n    componentDidMount() {\r\n        //this.props.fetchUsers()\r\n        //this.props.fetchRecipes()\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n<div>\r\n  <ProgressBar variant=\"success\" now={40} />\r\n</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Map state to props\r\nconst mapState = (state) => {\r\n    return {\r\n        users: state.users,\r\n        allRecipes: state.allRecipes\r\n    }\r\n}\r\n\r\n// Map dispatch to props\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        fetchUsers: () => dispatch(getUsers()),\r\n        fetchRecipes: () => dispatch(getRecipes())\r\n        \r\n    }\r\n}\r\n\r\nexport default connect (mapState, mapDispatch)(HomeDisplay);\r\n","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\redux\\reducers\\index.js",["82"],"import axios from 'axios'\r\n\r\n\r\n\r\n\r\n// Action Types\r\nconst GOT_USERS = 'GOT_USERS'\r\nconst GOT_RECIPES = 'GOT_RECIPES'\r\nconst CREATE_USER = 'CREATE_USER'\r\nconst LOGIN_USER = 'LOGIN_USER'\r\nconst INVALID_LOGIN = 'INVALID_LOGIN'\r\nconst GET_ME = 'GET_ME'\r\nconst LOGOUT = 'LOGOUT'\r\nconst CREATE_RECIPE = 'CREATE_RECIPE'\r\n\r\n//Initial state\r\nconst init = {\r\n    users: [],\r\n    recipes: [],\r\n    newUser: [],\r\n    user: {},\r\n    loginError: false,\r\n    isLoggedIn: false\r\n}\r\n\r\n// Action Creatures\r\nconst gotUsers = (data) => ({\r\n    type: GOT_USERS,\r\n    data,\r\n})\r\n\r\nconst gotRecipes = (data) => ({\r\n    type: GOT_RECIPES,\r\n    data,\r\n})\r\n\r\nconst userCreation = (data) => ({\r\n    type: CREATE_USER,\r\n    data,\r\n})\r\n\r\nconst getMe = (data) => ({\r\n    type: GET_ME,\r\n    data\r\n})\r\n\r\nconst userLogin = (data) => ({\r\n    type: LOGIN_USER,\r\n    data\r\n})\r\n\r\nconst invalidLogin = () => ({\r\n    type: INVALID_LOGIN\r\n})\r\n\r\nconst userLogout = () => ({\r\n    type: LOGOUT\r\n})\r\n\r\nconst recipeCreation = (data) => ({\r\n    type: CREATE_RECIPE,\r\n    data\r\n})\r\n\r\n// Thunks unwraps functions and returns objects (Middleware)\r\nexport const getUsers = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const response = await axios.get('https://capstone-recipe-db.herokuapp.com/users')\r\n            dispatch (gotUsers(response.data))\r\n            console.log (response.data.users)\r\n        } catch (error) {\r\n            console.error(error)\r\n    \r\n        }\r\n    }\r\n}\r\n\r\nexport const getRecipes = (term) => {\r\n    term = \"bagel\"\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.API_KEY}&query=${term}`)\r\n                dispatch (gotRecipes(response.data))\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const createRecipe = (body) => {\r\n    return async (dispatch) => {\r\n    try {\r\n        const response = await axios.post('https://capstone-recipe-db.herokuapp.com/recipes/', body, { withCredentials: true })\r\n        \r\n  \r\n        dispatch (recipeCreation(response.data))\r\n    } catch (error) {\r\n        console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const createUser = (body) => {\r\n    return async (dispatch) => {\r\n    try {\r\n        const response = await axios.post('https://capstone-recipe-db.herokuapp.com/auth/signup', body, {withCredentials: true})\r\n        dispatch (userCreation(response.data))\r\n    } catch (error) {\r\n        console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const sessionCheck = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('https://capstone-recipe-db.herokuapp.com/auth/me', {withCredentials: true})\r\n        console.log('SESS CHECK: ', res.data)\r\n        dispatch(getMe(res.data))\r\n    } catch (err) {\r\n        console.log('No active session, default logged out')\r\n    }\r\n}\r\n\r\nexport const loginUser = (body) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.post('https://capstone-recipe-db.herokuapp.com/auth/login', body, {withCredentials: true})\r\n            dispatch(userLogin(response.data))\r\n        } catch (err) {\r\n            dispatch(invalidLogin())\r\n            //console.error(JSON)    \r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async dispatch => {\r\n    try {\r\n        const res = await axios.delete('https://capstone-recipe-db.herokuapp.com/auth/logout')\r\n        dispatch(userLogout())\r\n    } catch (err) {\r\n        console.error('Failed to logout')\r\n    }\r\n}\r\n\r\nconst rootReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case GOT_USERS:\r\n            return action.data\r\n        case GOT_RECIPES:\r\n            return {...state, recipes: [action.data]}\r\n        case CREATE_RECIPE:\r\n            return {...state, recipes: [...state.recipes, action.data.recipe ]}\r\n        case LOGOUT:\r\n            return {...state, loginError: false, isLoggedIn: false }\r\n        case GET_ME:\r\n        case CREATE_USER:\r\n        case LOGIN_USER:\r\n            return {...state, user: action.data, loginError: false, isLoggedIn: true }\r\n        case INVALID_LOGIN: \r\n            return {...state, loginError: true, isLoggedIn: false }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\HomeView.jsx",[],"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\components\\SignUpPage.jsx",["83","84"],"import React, {Component, useState, useEffect} from \"react\"\r\nimport {Modal, Form, Button} from 'react-bootstrap'\r\nimport {createUser} from \"../redux/reducers\"\r\nimport {useDispatch} from 'react-redux'\r\nimport { validate } from 'validate.js'\r\n\r\nconst SignUp = ({ show, handleClose }) => {\r\n  const [validated, setValidated] = useState(false)\r\n  const [firstName, setFName] = useState('')\r\n  const [lastName, setLName] = useState('')\r\n  const [username, setUName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirm, setConfirmPass] = useState('')\r\n  const[equalPasswords, setPassEq] = useState(true)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const checkPasswords = () => setPassEq(!(validate({\r\n      passwordConfirm, password\r\n    },\r\n    {\r\n    passwordConfirm: {\r\n      equality: \"password\"\r\n    }\r\n  }) ?? false))\r\n\r\n  const handleSubmit = event => {\r\n    const form = event.currentTarget\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    if (!form.checkValidity() || !equalPasswords) {\r\n      \r\n      console.log('No valid')\r\n    } else {\r\n      console.log('Valid')\r\n      dispatch(createUser({ firstName, lastName, username, email, password }))\r\n    }\r\n\r\n    setValidated(true)\r\n  }\r\n\r\n  useEffect(() => {checkPasswords()}, [password, passwordConfirm])\r\n\r\n  useEffect(() => {\r\n    console.log('EQ passwords: ', equalPasswords)\r\n  }, [equalPasswords])\r\n\r\n    return (  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Sign Up</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicText1\">\r\n                <Form.Label> First Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"First Name\" value={firstName} onChange={e => setFName(e.target.value)} required/>\r\n                <Form.Control.Feedback type=\"invalid\" >First Name Required</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicText2\">\r\n                <Form.Label> Last Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={e => setLName(e.target.value)} required/>\r\n                <Form.Control.Feedback type=\"invalid\" >Last Name Required</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicText3\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUName(e.target.value)} required/>\r\n                <Form.Control.Feedback type=\"invalid\" >Username Required</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label> Email </Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} required/>\r\n                <Form.Control.Feedback type=\"invalid\" >Email Required</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label> Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"New Password\" value={password} onChange={e => {setPassword(e.target.value)}} required/>\r\n                <Form.Control.Feedback type=\"invalid\" >Password Required</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label> Confirm Password </Form.Label>\r\n                <Form.Control isInvalid={!equalPasswords} type=\"password\" placeholder=\"Password\" value={passwordConfirm} onChange={e => {setConfirmPass(e.target.value)}} required/>\r\n                <Form.Control.Feedback type=\"invalid\" >{!equalPasswords ? 'Passwords Must Match' : 'Password Required'}</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                   Submit\r\n               </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n        )\r\n    }\r\n\r\n\r\nexport default SignUp;","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\RecipesView.jsx",["85","86","87","88"],"import React, {Component} from 'react' \r\nimport {Button, Table, InputGroup, FormControl} from 'react-bootstrap'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nexport const RecipesView = (props) => {\r\n\r\n    const handleSumbit = event => {\r\n        event.preventDefault()\r\n\r\n    }\r\n        return (\r\n            <div>\r\n                {/*props.recipes.results.map((elem) => {return (<div> {elem.title} <img src= {elem.image} alt=\"\"/></div>)})*/}\r\n                {console.log(props.allRecipes)}\r\n                <InputGroup>\r\n                <FormControl\r\n                    placeholder=\"Search Recipes\"\r\n                />\r\n                </InputGroup>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n\r\n\r\nexport default RecipesView","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\FavoritesView.jsx",[],"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\components\\LoginPage.jsx",["89"],"import React, {useState} from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Modal, Form, Button} from 'react-bootstrap'\r\nimport { loginUser } from '../redux/reducers'\r\nimport { validate } from 'validate.js'\r\n\r\n\r\nfunction Login({ show, handleClose }) {\r\n\r\n    const [validated, setValidated] = useState(false)\r\n    const [validEmail, setValidEmail] = useState(true)\r\n    const [usernameEmail, setUser] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const loginSuccess = useSelector(state => !state.loginError)\r\n    const dispatch = useDispatch()\r\n    const isEmail = usernameEmail.includes('@') \r\n\r\n    const handleEmailUser = val => {\r\n      if (isEmail) {\r\n        setValidEmail(\r\n          !validate({ value: val }, {\r\n            value: {\r\n              email: true\r\n            }\r\n          }) ?? false\r\n        )\r\n      }\r\n      setUser(val)\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n      const form = event.currentTarget\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n\r\n      console.log('ValidJS: ', !validEmail)\r\n\r\n      if (!form.checkValidity() || (isEmail && !validEmail)) {\r\n        console.log('Invalid')\r\n        setValidEmail(false)\r\n      } else {\r\n        console.log('Form valid, submitting...')\r\n        setValidEmail(true)\r\n        dispatch(loginUser({\r\n          [isEmail ? 'email' : 'username']: usernameEmail,\r\n          password\r\n        }))\r\n      }\r\n\r\n      setValidated(true)\r\n    }\r\n\r\n    return (  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Login</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"formBasicText\">\r\n                <Form.Label>{isEmail ? 'Email' : 'Username or Email'}</Form.Label>\r\n                <Form.Control isInvalid={isEmail && !validEmail} type='text' placeholder=\"Username/Email\" value={usernameEmail} onChange={e => handleEmailUser(e.target.value)} required/>\r\n                <Form.Control.Feedback type=\"invalid\"  >{isEmail ? 'Invalid Email' : 'Username or Email Required' }</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} value={password} required/>\r\n                <Form.Control.Feedback type=\"invalid\">Password Required</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                   Submit\r\n               </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\AddRecipeView.jsx",[],"C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\ProfileView.jsx",["90","91","92","93","94"],"import React from 'react'\r\nimport {Table, Container, Row, Col} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport const ProfileView = props => {\r\n\r\n    const { isLoggedIn, user: { username, firstName, lastName, email, skill }} = useSelector(({ isLoggedIn, user }) => ({ isLoggedIn, user }))\r\n\r\n    return isLoggedIn ? (\r\n\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n            <Col>\r\n            <img src =\"https://t3.ftcdn.net/jpg/02/68/55/60/360_F_268556012_c1WBaKFN5rjRxR2eyV33znK4qnYeKZjm.jpg\" alt=\"\"></img>\r\n            </Col>\r\n            <Col>\r\n                    <div> {`Username: ${username}`}  </div>\r\n              \r\n                     <div> Skill Level </div>\r\n               \r\n                   <div> Bio: </div>\r\n               \r\n            </Col>\r\n            </Row>\r\n        \r\n        </Container>\r\n        </div>\r\n    ) : <Redirect to=\"/home\" />\r\n\r\n}\r\n\r\nexport default ProfileView","C:\\Coding\\react-apps\\recipe-app\\recipe-frontend\\src\\views\\UsersView.jsx",[],["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":9,"nodeType":"103","messageId":"104","endLine":1,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":6,"column":3,"nodeType":"103","messageId":"104","endLine":6,"endColumn":7},{"ruleId":"101","severity":1,"message":"106","line":7,"column":3,"nodeType":"103","messageId":"104","endLine":7,"endColumn":14},{"ruleId":"101","severity":1,"message":"107","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":8},{"ruleId":"108","severity":1,"message":"109","line":42,"column":6,"nodeType":"110","endLine":42,"endColumn":8,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"112","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"101","severity":1,"message":"113","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":19},{"ruleId":"101","severity":1,"message":"114","line":141,"column":15,"nodeType":"103","messageId":"104","endLine":141,"endColumn":18},{"ruleId":"101","severity":1,"message":"115","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"116","line":43,"column":39,"nodeType":"110","endLine":43,"endColumn":66,"suggestions":"117"},{"ruleId":"101","severity":1,"message":"115","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"118","line":2,"column":9,"nodeType":"103","messageId":"104","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"119","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":22},{"ruleId":"101","severity":1,"message":"120","line":9,"column":11,"nodeType":"103","messageId":"104","endLine":9,"endColumn":23},{"ruleId":"101","severity":1,"message":"121","line":14,"column":11,"nodeType":"103","messageId":"104","endLine":14,"endColumn":23},{"ruleId":"101","severity":1,"message":"119","line":2,"column":9,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"122","line":10,"column":43,"nodeType":"103","messageId":"104","endLine":10,"endColumn":52},{"ruleId":"101","severity":1,"message":"123","line":10,"column":54,"nodeType":"103","messageId":"104","endLine":10,"endColumn":62},{"ruleId":"101","severity":1,"message":"124","line":10,"column":64,"nodeType":"103","messageId":"104","endLine":10,"endColumn":69},{"ruleId":"101","severity":1,"message":"125","line":10,"column":71,"nodeType":"103","messageId":"104","endLine":10,"endColumn":76},{"ruleId":"97","replacedBy":"126"},{"ruleId":"99","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'HomeView' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'Modal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'UsersView' is defined but never used.","'RecipesView' is defined but never used.","'res' is assigned a value but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'checkPasswords'. Either include it or remove the dependency array.",["131"],"'Button' is defined but never used.","'Table' is defined but never used.","'handleSumbit' is assigned a value but never used.","'loginSuccess' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'email' is assigned a value but never used.","'skill' is assigned a value but never used.",["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [dispatch]",{"range":"136","text":"137"},"Update the dependencies array to be: [checkPasswords, password, passwordConfirm]",{"range":"138","text":"139"},[1498,1500],"[dispatch]",[1319,1346],"[checkPasswords, password, passwordConfirm]"]